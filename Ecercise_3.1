# include <iostream>
using namespace std;

class q_type
{
    int queue [100];
    int front, rear ;
public :
    q_type () {
        front = rear = 0;
    }
    void q(int num ) {
    if ((rear + 1 == front) || (rear + 1 == 100 && front ==0)) {
        cout << "Queue is full"<<endl;
    }
    rear++;
    if (rear == 100) {
        rear = 0;
        queue [rear] = num;
    }
}
    int deq () // retrieve
{   if (rear == front) {
    cout << "Queue is empty"<<endl;
    return -1;
}
    front++;
    if (front == rear) {
        front = 0;
        return queue [front];
    }
}
    q_type& operator=(const q_type& other) {
    front = other.front;
    rear = other.rear;
    for (int i = 0; i < 100; i++) {
        queue[i] = other.queue[i];
    }
    return *this;
}
};
int main ()
{
    q_type q1 , q2;
    int i;
    for (i=1; i <=10; i++)
        q1.q(i);
    q2 = q1;
    for (i=1; i <=10; i++)
        cout << " Dequeue 1: " << q1.deq () << "\n";
    for (i=1; i <=10; i++)
        cout << " Dequeue 2: " << q2.deq () << "\n";
    return 0;
}
